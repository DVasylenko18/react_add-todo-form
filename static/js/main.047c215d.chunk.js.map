{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","services/user.ts","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","id","username","TodoInfo","userId","todo","usersFromServer","find","cn","completed","title","TodoList","todos","map","App","useState","todosFromServer","actualTodos","setActualTodos","actualUsers","setTitle","setUserId","checkUser","setCheckUser","checkTitle","setCheckTitle","action","method","onSubmit","event","preventDefault","length","split","newTodo","Math","max","o","prevTodos","type","value","placeholder","onChange","target","selected","disabled","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.047c215d.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return user && (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n      key={todo.id}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{`${todo.title}`}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { User } from '../types/User';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport function checkUser(user: User | null) : string {\n  if (user !== null) {\n    return `${user}`;\n  }\n\n  return '';\n}\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo [];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (\n          <TodoInfo todo={todo} />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [actualTodos, setActualTodos] = useState<Todo[]>(todosFromServer);\n  const actualUsers: User[] = [...usersFromServer];\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [checkUser, setCheckUser] = useState(false);\n  const [checkTitle, setCheckTitle] = useState(false);\n\n  const handleTitleChange = () => {\n    setCheckTitle(false);\n  };\n\n  const handleUserChange = () => {\n    setCheckUser(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setCheckTitle(!title\n      && !(title.length > 0\n      && title.split(' ').length - 1 === title.length));\n    setCheckUser(userId === '0');\n\n    const newTodo: Todo = {\n      title,\n      id: +Math.max(...actualTodos.map(o => o.id)) + 1,\n      userId: +userId,\n      completed: false,\n    };\n\n    if (!!title\n      && userId !== '0'\n      && !(title.split(' ').length - 1 === title.length\n      )) {\n      setActualTodos(prevTodos => [...prevTodos, newTodo]);\n      setCheckUser(false);\n      setCheckTitle(false);\n      setTitle('');\n      setUserId('0');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Please enter a title\"\n            onChange={event => {\n              setTitle(event.target.value);\n              handleTitleChange();\n            }}\n          />\n          {\n            checkTitle && (<span className=\"error\">Please enter a title</span>)\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={event => {\n              setUserId(event.target.value);\n              handleUserChange();\n            }}\n          >\n            <option value=\"0\" key=\"-1\" selected disabled>Choose a user</option>\n            {\n              actualUsers.map(item => (\n                <option value={item.id} key={item.id}>{item.name}</option>\n              ))\n            }\n          </select>\n\n          {\n            checkUser && (<span className=\"error\">Please choose a user</span>)\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={actualTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}